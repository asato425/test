name: CI
on:
  workflow_dispatch:
    # push:
    #   branches: [ main ]
    # pull_request:
    #   branches: [ main ]

jobs:
  build:
    name: ビルド
    runs-on: ubuntu-latest
    permissions:
      contents: read # リポジトリのコンテンツを読み取るための最小権限
      actions: write # アーティファクトをアップロードするための権限
    timeout-minutes: 10 # ジョブのタイムアウトを10分に設定
    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false # 認証情報を永続化しない

      - name: Python 3.13 をセットアップ
        id: setup-python # 後続のステップでPythonバージョンを参照するためにIDを設定
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13" # pyproject.toml に基づくPythonバージョン

      - name: Poetry キャッシュを復元
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ~/.cache/pypoetry/virtualenvs # Poetryの仮想環境キャッシュパス
          key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }} # OS, Pythonバージョン, poetry.lockのハッシュに基づくキャッシュキー
          restore-keys: |
            ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-poetry- # 復元キー

      - name: Poetry をインストール
        run: |
          pip install poetry==1.8.2 # Poetryのバージョンを固定してインストール

      - name: 依存関係をインストール
        run: |
          poetry install --no-interaction --no-ansi # poetry.lockに基づいて依存関係をインストール

      - name: パッケージをビルド
        run: |
          poetry build # プロジェクトのパッケージをビルド

      - name: ビルド成果物をアップロード
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: dist # アーティファクト名
          path: dist/ # ビルド成果物のパス

  tests:
    name: テスト
    runs-on: ubuntu-latest
    permissions:
      contents: read # リポジトリのコンテンツを読み取るための最小権限
    timeout-minutes: 10 # ジョブのタイムアウトを10分に設定
    needs: build # ビルドジョブが成功した後に実行
    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false # 認証情報を永続化しない

      - name: Python 3.13 をセットアップ
        id: setup-python # 後続のステップでPythonバージョンを参照するためにIDを設定
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13" # pyproject.toml に基づくPythonバージョン

      - name: Poetry キャッシュを復元
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ~/.cache/pypoetry/virtualenvs # Poetryの仮想環境キャッシュパス
          key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }} # OS, Pythonバージョン, poetry.lockのハッシュに基づくキャッシュキー
          restore-keys: |
            ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-poetry- # 復元キー

      - name: Poetry をインストール
        run: |
          pip install poetry==1.8.2 # Poetryのバージョンを固定してインストール

      - name: 依存関係をインストール
        run: |
          poetry install --no-interaction --no-ansi # poetry.lockに基づいて依存関係をインストール

      - name: ユニットテストを実行
        run: |
          python -m unittest discover tests # unittestモジュールを使用してテストを実行
