name: CI

on:
  # このワークフローは、'work_1006_1220' ブランチへのプッシュ時に実行されます。
  # 他のイベントを追加する場合は、以下のコメントアウトされた行を参考にしてください。
  # pull_request:
  #   branches:
  #     - main
  # workflow_dispatch: # 手動でワークフローを実行するためのトリガー
  push:
    branches:
      - work_1006_1220

jobs:
  # ビルドとリンティングを行うジョブ
  build:
    name: ビルドとリンティング
    runs-on: ubuntu-latest
    # ジョブの実行タイムアウトを10分に設定
    timeout-minutes: 10
    # 最小限の権限を設定（リポジトリのコンテンツ読み取りのみ）
    permissions:
      contents: read

    steps:
      # リポジトリをチェックアウトするステップ
      - name: リポジトリのチェックアウト
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        # persist-credentialsをfalseに設定し、セキュリティを強化
        with:
          persist-credentials: false

      # Python環境をセットアップするステップ
      - name: Python 3.13のセットアップ
        id: setup-python # setup-pythonのIDを追加
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"

      # Poetryの依存関係キャッシュを復元または保存するステップ
      - name: Poetryキャッシュの復元
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-poetry-

      # Poetryをインストールするステップ
      - name: Poetryのインストール
        run: pip install poetry

      # プロジェクトの依存関係をインストールするステップ
      - name: 依存関係のインストール
        run: poetry install --no-interaction --no-ansi

      # コードのリンティング（flake8）を実行するステップ
      # リンティングエラーが発生しても、ワークフローは続行されます
      - name: コードのリンティング (flake8)
        run: poetry run flake8 .
        continue-on-error: true

      # プロジェクトをビルドするステップ
      - name: プロジェクトのビルド
        run: poetry build

      # ビルド成果物をアーティファクトとしてアップロードするステップ（オプション）
      # - name: ビルド成果物のアップロード
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: dist
      #     path: dist/

  # テストを実行するジョブ
  test:
    name: テスト
    runs-on: ubuntu-latest
    # ジョブの実行タイムアウトを10分に設定
    timeout-minutes: 10
    # 最小限の権限を設定（リポジトリのコンテンツ読み取りのみ）
    permissions:
      contents: read

    steps:
      # リポジトリをチェックアウトするステップ
      - name: リポジトリのチェックアウト
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        # persist-credentialsをfalseに設定し、セキュリティを強化
        with:
          persist-credentials: false

      # Python環境をセットアップするステップ
      - name: Python 3.13のセットアップ
        id: setup-python # setup-pythonのIDを追加
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"

      # Poetryの依存関係キャッシュを復元または保存するステップ
      - name: Poetryキャッシュの復元
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-poetry-

      # Poetryをインストールするステップ
      - name: Poetryのインストール
        run: pip install poetry

      # プロジェクトの依存関係をインストールするステップ
      - name: 依存関係のインストール
        run: poetry install --no-interaction --no-ansi

      # unittestを使用してテストを実行するステップ
      - name: テストの実行
        run: poetry run python -m unittest discover tests
